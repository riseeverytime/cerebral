import { ControllerClass, SignalChain } from 'cerebral'
import * as InfernoJSX from './InfernoJSX'

// TODO: expose SignalsMap from cerebral
interface SignalsMap {
    [signalName: string]: SignalChain
}

export const StateContainer: InfernoJSX.ComponentClass<{state: any, signals: SignalsMap}>
export const Container: InfernoJSX.ComponentClass<{controller: ControllerClass}>

type PropsMap<T> = {
    [P in keyof T]: () => T[P];
}

// Props are signal/state props, EProps are external props
export function connect<Props, EProps = {}>(props: Props, comp: InfernoJSX.ComponentType<PropsMap<Props> & EProps>): InfernoJSX.ComponentClass<EProps>
