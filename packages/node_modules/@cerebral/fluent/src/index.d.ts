import { sequenceFactory, SequenceBuilder } from 'function-tree/fluent'
import { ModuleObject, ModuleClass, SignalsMap } from 'cerebral'

interface ErrorClass {
  new(...args: any[]): any 
}

export interface FluentModuleDefintion<State, Signals> {
  state?: State
  signals?: Signals
  modules?: {
    [submodule: string]: ModuleClass
  }
  catch?: [ ErrorClass, SequenceBuilder ][]
  providers?: {
    [providerName: string]: any
  }
}

export declare function Module<State, Signals>(definition: FluentModuleDefintion<State, Signals>): ModuleClass