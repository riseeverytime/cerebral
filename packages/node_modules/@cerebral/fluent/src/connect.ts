import * as React from 'react'
import Hoc from './Hoc'

export default function connect<Props, State, Signals, EP>(dependencies: (connect: { props: Props, state: State, signals: Signals}) => EP, passedComponent: React.ComponentClass<Props & EP> | React.SFC<Props & EP>): React.ComponentClass<Props> {
  return Hoc<Props>(dependencies, passedComponent)
}

export type Connector<TProps, TState, TSignals> = {
  state: TState,
  props: TProps,
  signals: TSignals
}

export function FluentConnectFactory<TProps, TState, TSignals>() { 
  return {
    with: function<EP>(connector: (connect: Connector<TProps, TState, TSignals>) => EP) { 
      return {
        to: function(passedComponent: React.ComponentClass<TProps & EP> | React.SFC<TProps & EP>): React.ComponentClass<TProps> {
          return connect<TProps, TState, TSignals, EP>(connector, passedComponent);
        }
      }
    }
  }
}