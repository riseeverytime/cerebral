import { computed as mobxComputed } from 'mobx';

export type ComputedValue<T> = {
	get(): T
}

export class ComputedClass<T> {
  callback: () => T
  instance: ComputedValue<T>
  constructor (callback: () => T) {
    this.callback = callback
  }
  get() {
    this.instance = this.instance || mobxComputed(this.callback)

    return this.instance.get()
  }
}
export function Computed<T>(callback: () =>  T):  ComputedClass<T> {
  return new ComputedClass(callback);
}
