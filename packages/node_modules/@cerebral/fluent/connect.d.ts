/// <reference types="react" />
import * as React from 'react';
export default function connect<Props, State, Signals, EP>(dependencies: (connect: {
    props: Props;
    state: State;
    signals: Signals;
}) => EP, passedComponent: React.ComponentClass<Props & EP> | React.SFC<Props & EP>): React.ComponentClass<Props>;
export declare type Connector<TProps, TState, TSignals> = {
    state: TState;
    props: TProps;
    signals: TSignals;
};
export declare function ConnectFactory<TProps, TState, TSignals>(): {
    with: <EP>(connector: (connect: Connector<TProps, TState, TSignals>) => EP) => {
        to: (passedComponent: React.ComponentClass<TProps & EP> | React.StatelessComponent<TProps & EP>) => React.ComponentClass<TProps>;
    };
};
