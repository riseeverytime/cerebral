import BaseControllerClass from './BaseController'
import ControllerClass from './Controller'
import UniversalControllerClass from './UniversalController'
import ModuleClass from './Module'
import { Provider as ProviderClass } from 'function-tree'

export function BaseController(rootModule, options) {
  return new BaseControllerClass(rootModule, options)
}

export function Controller(rootModule, options) {
  return new ControllerClass(rootModule, options)
}

export function UniversalController(rootModule, options) {
  return new UniversalControllerClass(rootModule, options)
}

export function Provider(definition, options) {
  return new ProviderClass(definition, options)
}

export function Module(definition) {
  return new ModuleClass(definition)
}

export { default as Compute } from './Compute'
export { sequence, parallel } from 'function-tree'

export { default as View } from './View'
export { createDummyController, throwError } from './utils'
