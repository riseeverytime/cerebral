/* eslint-env mocha */
import { CerebralError } from './'
import assert from 'assert'

describe('CerebralError', () => {
  it('should be able to extend error', () => {
    const MyError = class MyError extends CerebralError {}

    assert.ok(new MyError() instanceof Error)
  })
  it('should set name', () => {
    const MyError = class MyError extends CerebralError {}
    const error = new MyError()
    assert.equal(error.name, 'CerebralError')
  })
  it('should set message', () => {
    const MyError = class MyError extends CerebralError {}
    const error = new MyError('hello')
    assert.equal(error.message, 'hello')
  })
  it('should have stacktrace if thrown', () => {
    const MyError = class MyError extends CerebralError {}
    try {
      throw new MyError()
    } catch (e) {
      assert.ok(e instanceof Error)
      assert.ok(e.stack)
    }
  })
  it('should serialize', () => {
    const MyError = class MyError extends CerebralError {}
    try {
      throw new MyError('wuuut?', { foo: 'bar' })
    } catch (e) {
      const serialized = JSON.parse(JSON.stringify(e))

      assert.equal(serialized.name, 'CerebralError')
      assert.equal(serialized.message, 'wuuut?')
      assert.deepEqual(serialized.details, { foo: 'bar' })
      assert.ok(serialized.stack)
    }
  })
})
